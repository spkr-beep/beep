ACLOCAL_AMFLAGS = -I auto-m4 -I m4 --install

contribdir = $(docdir)/contrib

BUILT_SOURCES   =
CLEANFILES      =
EXTRA_DIST      =
TESTS           =
bin_PROGRAMS    =
check_PROGRAMS  =
contrib_SCRIPTS =
dist_doc_DATA   =
html_DATA       =
man1_MANS       =
noinst_DATA     =

check_PROGRAMS            += issue-6-benchmark
issue_6_benchmark_SOURCES  = issue-6-benchmark.c
issue_6_benchmark_LDADD    = $(M_LIBS)

bin_PROGRAMS  += beep
beep_CFLAGS    =
beep_CFLAGS   += -std=c99
beep_CFLAGS   += -pedantic
beep_CFLAGS   += -Wall
beep_CFLAGS   += -Wextra
# beep_CFLAGS   += -Weverything
beep_CFLAGS   += -Werror
beep_CPPFLAGS  =
beep_SOURCES   =

# ARGH:
#   * secure_getenv() inside beep-log.c requires -D_GNU_SOURCE
#   * strerror_r() inside beep-library.c requires -U_GNU_SOURCE
#     for the XSI variant of the function
beep_CPPFLAGS += -D_GNU_SOURCE

beep_SOURCES  += beep-compiler.h
beep_SOURCES  += beep-config.h
beep_SOURCES  += beep-log.c
beep_SOURCES  += beep-log.h
beep_SOURCES  += beep-driver-console.c
beep_SOURCES  += beep-driver-evdev.c
EXTRA_DIST    += beep-driver-noop.c
beep_SOURCES  += beep-driver.h
beep_SOURCES  += beep-drivers.h
beep_SOURCES  += beep-drivers.c
beep_SOURCES  += beep-event-loop.c
beep_SOURCES  += beep-event-loop.h
beep_SOURCES  += beep-library.c
beep_SOURCES  += beep-library.h
beep_SOURCES  += beep-main.c
beep_SOURCES  += beep-types.h
beep_SOURCES  += beep-usage.c
beep_SOURCES  += beep-usage.h

dist_doc_DATA += COPYING
dist_doc_DATA += CREDITS.md
dist_doc_DATA += NEWS.md
dist_doc_DATA += PERMISSIONS.md
dist_doc_DATA += README.md

EXTRA_DIST    += DEVELOPMENT.md
EXTRA_DIST    += INSTALL.md
EXTRA_DIST    += PACKAGING.md

EXTRA_DIST    += pandoc.css

CLEANFILES    += CREDITS.html
CLEANFILES    += NEWS.html
CLEANFILES    += PERMISSIONS.html
CLEANFILES    += README.html

CLEANFILES    += DEVELOPMENT.html
CLEANFILES    += INSTALL.html
CLEANFILES    += PACKAGING.html

if HAVE_TOOL_PANDOC

html_DATA     += pandoc.css

html_DATA     += CREDITS.html
html_DATA     += NEWS.html
html_DATA     += PERMISSIONS.html
html_DATA     += README.html

noinst_DATA   += DEVELOPMENT.html
noinst_DATA   += INSTALL.html
noinst_DATA   += PACKAGING.html

.md.html:
	$(PANDOC) --from gfm --to html --standalone -M pagetitle="$$($(SED) -n 1p $<)" -M title="" -c pandoc.css $< -o $@

endif


REPLACEMENTS  =
REPLACEMENTS += -e 's|[@]configure_input@|$@ generated by Makefile from $<|g'
REPLACEMENTS += -e 's|[@]PACKAGE_TARNAME@|$(PACKAGE_TARNAME)|g'
REPLACEMENTS += -e 's|[@]PACKAGE_NAME@|$(PACKAGE_NAME)|g'
REPLACEMENTS += -e 's|[@]PACKAGE_VERSION@|$(PACKAGE_VERSION)|g'
REPLACEMENTS += -e 's|[@]DEFAULT_FREQ@|$(DEFAULT_FREQ)|g'
REPLACEMENTS += -e 's|[@]DEFAULT_LENGTH@|$(DEFAULT_LENGTH)|g'
REPLACEMENTS += -e 's|[@]DEFAULT_DELAY@|$(DEFAULT_DELAY)|g'
REPLACEMENTS += -e 's|[@]builddir@|$(builddir)|g'
REPLACEMENTS += -e 's|[@]srcdir@|$(srcdir)|g'
REPLACEMENTS += -e 's|[@]top_builddir@|$(top_builddir)|g'
REPLACEMENTS += -e 's|[@]top_srcdir@|$(top_srcdir)|g'
REPLACEMENTS += -e 's|[@]abs_top_builddir@|$(abs_top_builddir)|g'
REPLACEMENTS += -e 's|[@]abs_top_srcdir@|$(abs_top_srcdir)|g'
REPLACEMENTS += -e 's|[@]BEEP@|beep|g'

REPLACEMENTS += -e 's|[@]BASH@|$(BASH)|g'
REPLACEMENTS += -e 's|[@]DIFF@|$(DIFF)|g'
REPLACEMENTS += -e 's|[@]TPUT@|$(TPUT)|g'

EXTRA_DIST    += beep-usage.txt
CLEANFILES    += beep-usage.c
BUILT_SOURCES += beep-usage.c
beep-usage.c: beep-usage.txt Makefile
	echo '/* Auto-generated from `$<`. Modify that file instead. */' > $@
	echo '#include "beep-usage.h"' >> $@
	echo 'char beep_usage[] =' >> $@
	set -e; IFS=""; while read line; do \
		printf '  "%s\\n"\n' "$${line}" >> $@; \
	done < $<
	echo '  ;' >> $@

EXTRA_DIST += beep.1.in
CLEANFILES += beep.1
man1_MANS  += beep.1
beep.1: beep.1.in Makefile
	$(SED) $(REPLACEMENTS) < $< > $@

EXTRA_DIST += beep-usage.txt.in
CLEANFILES += beep-usage.txt
beep-usage.txt: beep-usage.txt.in Makefile
	$(SED) $(REPLACEMENTS) < $< > $@

BUILT_SOURCES += beep-config.h
EXTRA_DIST    += beep-config.h.in
CLEANFILES    += beep-config.h
beep-config.h: beep-config.h.in Makefile
	$(SED) $(REPLACEMENTS) < $< > $@

EXTRA_DIST    += Doxyfile.in
CLEANFILES    += Doxyfile
Doxyfile: Doxyfile.in Makefile
	$(SED) $(REPLACEMENTS) < $< > $@

if HAVE_TOOL_DOXYGEN
CLEANFILES += doxygen.stamp
doxygen.stamp: Doxyfile $(BUILT_SOURCES) $(beep_SOURCES)
	$(DOXYGEN) $<
	echo timestamp > $@

dox: doxygen.stamp

if HAVE_TOOL_PYTHON3
.PHONY: serve-dox
serve-dox: dox
	$(PYTHON3) -m http.server --directory dox/html
endif
endif

include contrib/Makefile-files
include contrib/morse/Makefile-files
include m4/Makefile-files
include tests/Makefile-files

# TODO: make tests run with "make check" and possibly "make installcheck"
# installcheck-local:
